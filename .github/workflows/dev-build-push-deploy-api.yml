name: DEV API CI && CD

on:
  push:
    branches:
      - 'DEV'

permissions:
  id-token: write
  contents: read

jobs:

  db-api-migration:
    runs-on: ubuntu-latest
    name: API Database migration
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup .NET SDK
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x' # Change this to your desired .NET version

      - name: Install EF Core tools
        run: dotnet tool install --global dotnet-ef --version 6.0.8

      # Restore dependencies
      - name: Restore dependencies
        run: dotnet restore Backend/WebAPI/WebAPI.csproj

      # Run EF Core migrations
      - name: Run migrations
        run: dotnet ef database update -c ApiDbContext -p Backend/DatabaseContext -s Backend/WebAPI
        env:
          DatabaseConnection: ${{ secrets.DEV_API_DB_CONNECTION }} # Store your connection string as a secret in your repository settings

  # define the job to build and publish the docker image
  build-push-docker-image:
    needs: [db-api-migration]
    name: Build Docker image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in the job
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: xnotes/web
          tags: type=raw,value={{branch}}-{{sha}}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./pipeline-files/api/api.dev.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # define the job to build and publish the docker image
  deploy-to-aca:
    needs: [build-push-docker-image]
    name: Deploy API to Azure container apps
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in the job
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: xnotes/web
          tags: type=raw,value={{branch}}-{{sha}}

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.DEV_WEB_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.DEV_WEB_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.DEV_WEB_AZURE_SUBSCRIPTION_ID }}
                
      - name: Build and deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ steps.meta.outputs.tags }}
          containerAppName: web
          resourceGroup: XNotesDev
          containerAppEnvironment: managedEnvironment-XNotesDev-9d7c
          environmentVariables: GoogleAuth__Audience=secretref:google-client-id DatabaseConnection=secretref:database-connection Controllers__FakeData=secretref:fake-data-active Redis__Active=secretref:redis-active Redis__Connection=secretref:redis-connection JWTokenConfig__secret=secretref:jwt-secret JWTokenConfig__issuer=secretref:jwt-issuer JWTokenConfig__audience=secretref:jwt-audience JWTokenConfig__accessTokenExpiration=secretref:jwt-access-token-expiration JWTokenConfig__refreshTokenExpiration=secretref:jwt-refresh-token-expiration JWTokenConfig__https=secretref:jwt-https Azure__Storages__0__Name=secretref:storage-dev-name Azure__Storages__0__Id=secretref:storage-dev-id Azure__Storages__0__Connection=secretref:storage-dev-connection Azure__Storages__0__Url=secretref:storage-dev-url GoogleClient__Id=secretref:google-client-id AuthRequest__Url=secretref:auth-request-url AuthRequest__RedirectUrl=secretref:auth-request-redirect
      
      - name: Build and deploy Config
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ steps.meta.outputs.tags }}
          containerAppName: web
          resourceGroup: XNotesDev
          yamlConfigPath: pipeline-files/api/dev-api.yaml
          containerAppEnvironment: managedEnvironment-XNotesDev-9d7c
          environmentVariables: GoogleAuth__Audience=secretref:google-client-id DatabaseConnection=secretref:database-connection Controllers__FakeData=secretref:fake-data-active Redis__Active=secretref:redis-active Redis__Connection=secretref:redis-connection JWTokenConfig__secret=secretref:jwt-secret JWTokenConfig__issuer=secretref:jwt-issuer JWTokenConfig__audience=secretref:jwt-audience JWTokenConfig__accessTokenExpiration=secretref:jwt-access-token-expiration JWTokenConfig__refreshTokenExpiration=secretref:jwt-refresh-token-expiration JWTokenConfig__https=secretref:jwt-https Azure__Storages__0__Name=secretref:storage-dev-name Azure__Storages__0__Id=secretref:storage-dev-id Azure__Storages__0__Connection=secretref:storage-dev-connection Azure__Storages__0__Url=secretref:storage-dev-url GoogleClient__Id=secretref:google-client-id AuthRequest__Url=secretref:auth-request-url AuthRequest__RedirectUrl=secretref:auth-request-redirect